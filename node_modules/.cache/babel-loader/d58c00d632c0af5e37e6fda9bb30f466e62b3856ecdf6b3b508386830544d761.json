{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Textarea from './components/Textarea';\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [alert, setAlert] = useState(null);\n  const showalert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const [mode, setMode] = useState('light');\n  const toggle = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.background = '#0E2046';\n      showalert(\"DARK MODE ENABLED\", \"SUCCESS!\");\n      document.title = 'dark mode';\n      setInterval(() => {\n        document.title = 'Converter is Amazing ';\n      }, 2000);\n      setInterval(() => {\n        document.title = 'Install Converter now';\n      }, 1500);\n    } else {\n      setMode('light');\n      document.body.style.background = 'white';\n      showalert(\"LIGHT MODE ENABLED\", \"SUCCESS!\");\n      document.title = 'light mode';\n      setInterval(() => {\n        document.title = 'Converter is Amazing ';\n      }, 2000);\n      setInterval(() => {\n        document.title = 'Install Converter now';\n      }, 1500);\n    }\n  };\n  return (\n    /*#__PURE__*/\n    //text ko change karenge without loading the page\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          title: \"CONVERTER\",\n          mode: mode,\n          toggle: toggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          alert: alert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container my-3\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/about\",\n              children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              children: /*#__PURE__*/_jsxDEV(Textarea, {\n                mode: mode,\n                showalert: showalert\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 1\n      }, this)\n    }, void 0, false)\n  );\n}\n_s(App, \"EIEkTdeZHDVgEcS49EriU7wHslw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Navbar","Textarea","Alert","About","BrowserRouter","Router","Switch","Route","Link","App","alert","setAlert","showalert","message","type","msg","setTimeout","mode","setMode","toggle","document","body","style","background","title","setInterval"],"sources":["D:/react/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Textarea from './components/Textarea';\nimport Alert from './components/Alert';\nimport About from './components/About';\n\nimport{\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\nconst [alert,setAlert]=useState(null);\n\n  const showalert = (message,type) => {\n    setAlert({\n      msg:message,\n    type:type\n    })\n    setTimeout(()=>{\nsetAlert(null);\n    },1500);\n    \n  }\n\n\n\nconst [mode,setMode]=useState('light');  \n  const toggle=()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.background='#0E2046';\n      showalert(\"DARK MODE ENABLED\",\"SUCCESS!\");\n      document.title='dark mode';\n      setInterval(()=>{\n        document.title='Converter is Amazing ';\n      },2000);\n      setInterval(()=>{\n        document.title='Install Converter now';\n      },1500);\n    }\n    else{\n      setMode('light');\n      document.body.style.background='white';\n      showalert(\"LIGHT MODE ENABLED\",\"SUCCESS!\");\n      document.title='light mode'\n      setInterval(()=>{\n        document.title='Converter is Amazing ';\n      },2000);\n      setInterval(()=>{\n        document.title='Install Converter now';\n      },1500);\n    }\n  }\n\n\n\n\n  return (\n    //text ko change karenge without loading the page\n    <>\n<Router>\n    <Navbar title=\"CONVERTER\" mode={mode} toggle={toggle} />\n    <Alert alert={alert} /> \n    <div className=\"container my-3\">\n\n      <Switch>\n        <Route exact path=\"/about\">\n           <About/>\n        </Route>\n        <Route path=\"/\">\n          <Textarea mode={mode} showalert={showalert}/>   \n          </Route>\n      </Switch>\n        \n      \n    </div>\n\n</Router>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}