{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\src\\\\components\\\\Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ReactPropTypes } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Navbar(props) {\n  _s();\n  const [g, setgreen] = useState('light');\n  const greenmode = () => {\n    if (g === 'light') {\n      setgreen('dark');\n      document.body.style.backgroundColor = 'green';\n      props.setalert(\"\");\n    } else {\n      setgreen('light');\n      document.body.style.backgroundColor = 'white';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: `navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"navbar-brand\",\n        href: \"#\",\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: greenmode,\n        className: \"btn btn-outline-success\",\n        children: \"Green Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-danger\",\n        children: \"Red Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-warning\",\n        children: \"Yellow Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          onClick: props.toggle,\n          type: \"checkbox\",\n          id: \"flexSwitchCheckDefault\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          htmlFor: \"flexSwitchCheckDefault\",\n          children: \"Dark/Light Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(Navbar, \"S4KYr016JUVx+JVA/Phi5HjHMuM=\");\n_c = Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","ReactPropTypes","Navbar","props","g","setgreen","greenmode","document","body","style","backgroundColor","setalert","mode","title","toggle"],"sources":["D:/react/src/components/Navbar.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { ReactPropTypes } from 'react';\r\n\r\nexport default function Navbar(props) {\r\n  const [g, setgreen]=useState('light'); \r\n  const greenmode =()=>{\r\n    if(g==='light'){\r\n      setgreen('dark');\r\n      document.body.style.backgroundColor='green';\r\n      props.setalert(\"\")\r\n    }\r\n    else{\r\n      setgreen('light');\r\n      document.body.style.backgroundColor='white';\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    \r\n\r\n<button type=\"button\" onClick={greenmode} className=\"btn btn-outline-success\">Green Mode</button>\r\n<button type=\"button\" className=\"btn btn-outline-danger\">Red Mode</button>\r\n<button type=\"button\" className=\"btn btn-outline-warning\">Yellow Mode</button>\r\n\r\n\r\n\r\n<div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n<input className=\"form-check-input\" onClick={props.toggle} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n<label className=\"form-check-label\"  htmlFor=\"flexSwitchCheckDefault\">Dark/Light Mode</label> \r\n</div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,QAAQ,OAAO;AAAC;AAEvC,eAAe,SAASC,MAAM,CAACC,KAAK,EAAE;EAAA;EACpC,MAAM,CAACC,CAAC,EAAEC,QAAQ,CAAC,GAACL,QAAQ,CAAC,OAAO,CAAC;EACrC,MAAMM,SAAS,GAAE,MAAI;IACnB,IAAGF,CAAC,KAAG,OAAO,EAAC;MACbC,QAAQ,CAAC,MAAM,CAAC;MAChBE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAC,OAAO;MAC3CP,KAAK,CAACQ,QAAQ,CAAC,EAAE,CAAC;IACpB,CAAC,MACG;MACFN,QAAQ,CAAC,OAAO,CAAC;MACjBE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAC,OAAO;IAC7C;EACF,CAAC;EAGD,oBACE;IAAK,SAAS,EAAG,kCAAiCP,KAAK,CAACS,IAAK,OAAMT,KAAK,CAACS,IAAK,EAAE;IAAA,uBAClF;MAAK,SAAS,EAAC,iBAAiB;MAAA,wBAC9B;QAAG,SAAS,EAAC,cAAc;QAAC,IAAI,EAAC,GAAG;QAAA,UAAET,KAAK,CAACU;MAAK;QAAA;QAAA;QAAA;MAAA,QAAK,eAG1D;QAAQ,IAAI,EAAC,QAAQ;QAAC,OAAO,EAAEP,SAAU;QAAC,SAAS,EAAC,yBAAyB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB,eACjG;QAAQ,IAAI,EAAC,QAAQ;QAAC,SAAS,EAAC,wBAAwB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB,eAC1E;QAAQ,IAAI,EAAC,QAAQ;QAAC,SAAS,EAAC,yBAAyB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAqB,eAI9E;QAAK,SAAS,EAAG,+BAA8BH,KAAK,CAACS,IAAI,KAAG,OAAO,GAAC,MAAM,GAAC,OAAQ,EAAE;QAAA,wBACrF;UAAO,SAAS,EAAC,kBAAkB;UAAC,OAAO,EAAET,KAAK,CAACW,MAAO;UAAC,IAAI,EAAC,UAAU;UAAC,EAAE,EAAC;QAAwB;UAAA;UAAA;UAAA;QAAA,QAAE,eACxG;UAAO,SAAS,EAAC,kBAAkB;UAAE,OAAO,EAAC,wBAAwB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAwB;MAAA;QAAA;QAAA;QAAA;MAAA,QACvF;IAAA;MAAA;MAAA;MAAA;IAAA;EACE;IAAA;IAAA;IAAA;EAAA,QACF;AAEN;AAAC,GAlCuBZ,MAAM;AAAA,KAANA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}