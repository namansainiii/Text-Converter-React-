{"ast":null,"code":"import _slicedToArray from\"D:/CSE/reactjs/my-react-project/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Textarea(props){//states\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];/*button*/var Clickonclick=function Clickonclick(){var newText=text.toUpperCase();setText(newText);props.showalert(\"TEXT CONVERTED TO UPPERCASE\",\"SUCCESS!\");};var Clickonclick2=function Clickonclick2(){var newText=text.toLowerCase();setText(newText);props.showalert(\"TEXT CONVERTED TO LOWERCASE\",\"SUCCESS!\");};var ClearText=function ClearText(){var newText=\"\";setText(newText);props.showalert(\"TEXT CLEARED\",\"SUCCESS!\");};var gmail=function gmail(){var newText=text+\"@gmail.com\";setText(newText);props.showalert(\"YOUR GMAIL HAS BEEN CREATED!\",\"CREATED!\");};var handleCopy=function handleCopy(){var text=document.getElementById(\"exampleFormControlTextarea1\");text.select();navigator.clipboard.writeText(text.value);props.showalert(\"COPIED!\",\"YOUR TEXT HAS BEEN COPIED!\");};/*textarea*/var Changeonchange=function Changeonchange(event){setText(event.target.value);};/*\r\n//buttons-dark/light mode \r\nconst[btntext,setbtntext]=useState(\"Enable Dark Mode\")\r\n\r\n\r\n    //dark mode- style\r\n   const [myStyle,setstyle]=useState({\r\n        color: 'black',\r\n        backgroundColor: 'white'\r\n    })\r\n\r\n\r\n    const Dark = () =>{\r\n        if(myStyle.color == 'white'){\r\n            setstyle({\r\n                color: 'black',\r\n                backgroundColor: 'white'\r\n            })\r\n            setbtntext(\"Enable Dark Mode\")\r\n        }\r\n        else{\r\n            setstyle({\r\n                color: 'white',\r\n                backgroundColor: 'black'\r\n            })\r\n            setbtntext(\"Enable Light Mode\")\r\n        }\r\n    }*/return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",style:{color:props.mode==='dark'?'white':'black'},children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"exampleFormControlTextarea1\",children:\"Start Typing...\"}),/*#__PURE__*/_jsx(\"textarea\",{className:\"form-control\",value:text,style:{backgroundColor:props.mode==='dark'?'rgb(126 135 129)':'lightblue',color:props.mode==='dark'?'white':'black'},onChange:Changeonchange,id:\"exampleFormControlTextarea1\",rows:\"8\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:Clickonclick,className:\"btn btn-info mx-2\",children:\"Convert to Upper Case\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:Clickonclick2,className:\"btn btn-info mx-2\",children:\"Convert to Lower Case\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleCopy,className:\"btn btn-info mx-2\",children:\"Copy Text\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:gmail,className:\"btn btn-info mx-2\",children:\"Create Gmail I'd\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:ClearText,className:\"btn btn-info mx-2\",children:\"Clear Text\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"h1\",{children:\" TEXT SUMMARY: \"}),text.split(\" \").length,\" words , \",text.length,\" characters , \",text.split(\" \").length*0.008,\" sec Reading Time \",/*#__PURE__*/_jsx(\"br\",{}),\"Preview: \",/*#__PURE__*/_jsx(\"br\",{}),\" \",text.length>0?text:\"Start Typing In the Above Box to Preview \"]})});}","map":{"version":3,"names":["React","useState","Textarea","props","text","setText","Clickonclick","newText","toUpperCase","showalert","Clickonclick2","toLowerCase","ClearText","gmail","handleCopy","document","getElementById","select","navigator","clipboard","writeText","value","Changeonchange","event","target","color","mode","backgroundColor","split","length"],"sources":["D:/CSE/reactjs/my-react-project/src/components/Textarea.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function Textarea(props) {\r\n    //states\r\n    const [text,setText]=useState('');\r\n    \r\n/*button*/ \r\n   const Clickonclick= () =>{\r\n    let newText = text.toUpperCase();\r\n    setText(newText)\r\n    props.showalert(\"TEXT CONVERTED TO UPPERCASE\",\"SUCCESS!\");\r\n   } \r\n\r\n   const Clickonclick2= () =>{\r\n    let newText = text.toLowerCase();\r\n    setText(newText)\r\n    props.showalert(\"TEXT CONVERTED TO LOWERCASE\",\"SUCCESS!\");\r\n   } \r\n\r\n\r\n   const ClearText= () =>{\r\n    let newText = \"\";\r\n    setText(newText)\r\n    props.showalert(\"TEXT CLEARED\",\"SUCCESS!\");\r\n   } \r\n   \r\n\r\n\r\n   const gmail= () =>{\r\n    let newText = text+\"@gmail.com\";\r\n    setText(newText)\r\n    props.showalert(\"YOUR GMAIL HAS BEEN CREATED!\",\"CREATED!\")\r\n   } \r\n\r\n\r\n   const handleCopy=()=>{\r\n    var text=document.getElementById(\"exampleFormControlTextarea1\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showalert(\"COPIED!\",\"YOUR TEXT HAS BEEN COPIED!\")\r\n   \r\n   }\r\n\r\n\r\n    /*textarea*/\r\n    const Changeonchange = (event) =>{\r\n        setText(event.target.value)\r\n    }\r\n\r\n\r\n    \r\n\r\n/*\r\n//buttons-dark/light mode \r\nconst[btntext,setbtntext]=useState(\"Enable Dark Mode\")\r\n\r\n\r\n    //dark mode- style\r\n   const [myStyle,setstyle]=useState({\r\n        color: 'black',\r\n        backgroundColor: 'white'\r\n    })\r\n\r\n\r\n    const Dark = () =>{\r\n        if(myStyle.color == 'white'){\r\n            setstyle({\r\n                color: 'black',\r\n                backgroundColor: 'white'\r\n            })\r\n            setbtntext(\"Enable Dark Mode\")\r\n        }\r\n        else{\r\n            setstyle({\r\n                color: 'white',\r\n                backgroundColor: 'black'\r\n            })\r\n            setbtntext(\"Enable Light Mode\")\r\n        }\r\n    }*/\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n  <div className=\"form-group\" style={{color: props.mode==='dark'?'white':'black'}} >\r\n    <label htmlFor=\"exampleFormControlTextarea1\">Start Typing...</label>\r\n    <textarea className=\"form-control\" value={text} style={{backgroundColor: props.mode==='dark'?'rgb(126 135 129)':'lightblue' , color:props.mode==='dark'?'white':'black'}} onChange={Changeonchange} id=\"exampleFormControlTextarea1\" rows=\"8\" ></textarea>\r\n    \r\n    <br/>\r\n\r\n    <button type=\"button\" onClick={Clickonclick} className=\"btn btn-info mx-2\">Convert to Upper Case</button>\r\n    <button type=\"button\" onClick={Clickonclick2} className=\"btn btn-info mx-2\">Convert to Lower Case</button>\r\n    <button type=\"button\" onClick={handleCopy} className=\"btn btn-info mx-2\">Copy Text</button>\r\n    \r\n    <button type=\"button\" onClick={gmail} className=\"btn btn-info mx-2\">Create Gmail I'd</button>\r\n    <button type=\"button\" onClick={ClearText} className=\"btn btn-info mx-2\">Clear Text</button>\r\n    \r\n <br/><br/>\r\n\r\n    <h1> TEXT SUMMARY: </h1>\r\n    {text.split(\" \").length} words , {text.length} characters , {text.split(\" \").length*0.008} sec Reading Time <br/>\r\n    Preview: <br/> {text.length>0?text:\"Start Typing In the Above Box to Preview \"}\r\n</div>\r\n</>\r\n  )\r\n}\r\n"],"mappings":"qHAAA,MAAOA,MAAK,EAAIC,QAAQ,KAAQ,OAAO,8IAEvC,cAAe,SAASC,SAAQ,CAACC,KAAK,CAAE,CACpC;AACA,cAAqBF,QAAQ,CAAC,EAAE,CAAC,wCAA1BG,IAAI,eAACC,OAAO,eAEvB,UACG,GAAMC,aAAY,CAAE,QAAdA,aAAY,EAAO,CACxB,GAAIC,QAAO,CAAGH,IAAI,CAACI,WAAW,EAAE,CAChCH,OAAO,CAACE,OAAO,CAAC,CAChBJ,KAAK,CAACM,SAAS,CAAC,6BAA6B,CAAC,UAAU,CAAC,CAC1D,CAAC,CAED,GAAMC,cAAa,CAAE,QAAfA,cAAa,EAAO,CACzB,GAAIH,QAAO,CAAGH,IAAI,CAACO,WAAW,EAAE,CAChCN,OAAO,CAACE,OAAO,CAAC,CAChBJ,KAAK,CAACM,SAAS,CAAC,6BAA6B,CAAC,UAAU,CAAC,CAC1D,CAAC,CAGD,GAAMG,UAAS,CAAE,QAAXA,UAAS,EAAO,CACrB,GAAIL,QAAO,CAAG,EAAE,CAChBF,OAAO,CAACE,OAAO,CAAC,CAChBJ,KAAK,CAACM,SAAS,CAAC,cAAc,CAAC,UAAU,CAAC,CAC3C,CAAC,CAID,GAAMI,MAAK,CAAE,QAAPA,MAAK,EAAO,CACjB,GAAIN,QAAO,CAAGH,IAAI,CAAC,YAAY,CAC/BC,OAAO,CAACE,OAAO,CAAC,CAChBJ,KAAK,CAACM,SAAS,CAAC,8BAA8B,CAAC,UAAU,CAAC,CAC3D,CAAC,CAGD,GAAMK,WAAU,CAAC,QAAXA,WAAU,EAAK,CACpB,GAAIV,KAAI,CAACW,QAAQ,CAACC,cAAc,CAAC,6BAA6B,CAAC,CAC/DZ,IAAI,CAACa,MAAM,EAAE,CACbC,SAAS,CAACC,SAAS,CAACC,SAAS,CAAChB,IAAI,CAACiB,KAAK,CAAC,CACzClB,KAAK,CAACM,SAAS,CAAC,SAAS,CAAC,4BAA4B,CAAC,CAExD,CAAC,CAGA,YACA,GAAMa,eAAc,CAAG,QAAjBA,eAAc,CAAIC,KAAK,CAAI,CAC7BlB,OAAO,CAACkB,KAAK,CAACC,MAAM,CAACH,KAAK,CAAC,CAC/B,CAAC,CAKL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAKE,mBACE,sCACF,aAAK,SAAS,CAAC,YAAY,CAAC,KAAK,CAAE,CAACI,KAAK,CAAEtB,KAAK,CAACuB,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAE,wBAC9E,cAAO,OAAO,CAAC,6BAA6B,6BAAwB,cACpE,iBAAU,SAAS,CAAC,cAAc,CAAC,KAAK,CAAEtB,IAAK,CAAC,KAAK,CAAE,CAACuB,eAAe,CAAExB,KAAK,CAACuB,IAAI,GAAG,MAAM,CAAC,kBAAkB,CAAC,WAAW,CAAGD,KAAK,CAACtB,KAAK,CAACuB,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAE,CAAC,QAAQ,CAAEJ,cAAe,CAAC,EAAE,CAAC,6BAA6B,CAAC,IAAI,CAAC,GAAG,EAAa,cAE1P,aAAK,cAEL,eAAQ,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAEhB,YAAa,CAAC,SAAS,CAAC,mBAAmB,mCAA+B,cACzG,eAAQ,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAEI,aAAc,CAAC,SAAS,CAAC,mBAAmB,mCAA+B,cAC1G,eAAQ,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAEI,UAAW,CAAC,SAAS,CAAC,mBAAmB,uBAAmB,cAE3F,eAAQ,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAED,KAAM,CAAC,SAAS,CAAC,mBAAmB,8BAA0B,cAC7F,eAAQ,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAED,SAAU,CAAC,SAAS,CAAC,mBAAmB,wBAAoB,cAE9F,aAAK,2BAAK,cAEP,uCAAwB,CACvBR,IAAI,CAACwB,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,aAAWzB,IAAI,CAACyB,MAAM,kBAAgBzB,IAAI,CAACwB,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,KAAK,mCAAmB,aAAK,0BACxG,aAAK,KAAEzB,IAAI,CAACyB,MAAM,CAAC,CAAC,CAACzB,IAAI,CAAC,2CAA2C,GAC5E,EACH,CAEH"},"metadata":{},"sourceType":"module","externalDependencies":[]}