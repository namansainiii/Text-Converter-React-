{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\src\\\\components\\\\Textarea.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Textarea(props) {\n  _s();\n  //states\n  const [text, setText] = useState('');\n\n  /*button*/\n  const Clickonclick = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n    props.showalert(\"TEXT CONVERTED TO UPPERCASE\", \"SUCCESS!\");\n  };\n  const Clickonclick2 = () => {\n    let newText = text.toLowerCase();\n    setText(newText);\n    props.showalert(\"TEXT CONVERTED TO LOWERCASE\", \"SUCCESS!\");\n  };\n  const ClearText = () => {\n    let newText = \"\";\n    setText(newText);\n    props.showalert(\"TEXT CLEARED\", \"SUCCESS!\");\n  };\n  const gmail = () => {\n    let newText = text + \"@gmail.com\";\n    setText(newText);\n    props.showalert(\"CREATED!\", \"YOUR GMAIL HAS BEEN CREATED!\");\n  };\n\n  /*textarea*/\n  const Changeonchange = event => {\n    setText(event.target.value);\n  };\n\n  /*\r\n  //buttons-dark/light mode \r\n  const[btntext,setbtntext]=useState(\"Enable Dark Mode\")\r\n  \r\n  \r\n      //dark mode- style\r\n     const [myStyle,setstyle]=useState({\r\n          color: 'black',\r\n          backgroundColor: 'white'\r\n      })\r\n  \r\n  \r\n      const Dark = () =>{\r\n          if(myStyle.color == 'white'){\r\n              setstyle({\r\n                  color: 'black',\r\n                  backgroundColor: 'white'\r\n              })\r\n              setbtntext(\"Enable Dark Mode\")\r\n          }\r\n          else{\r\n              setstyle({\r\n                  color: 'white',\r\n                  backgroundColor: 'black'\r\n              })\r\n              setbtntext(\"Enable Light Mode\")\r\n          }\r\n      }*/\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : 'black'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"exampleFormControlTextarea1\",\n        children: \"Start Typing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        value: text,\n        style: {\n          backgroundColor: props.mode === 'dark' ? 'rgb(126 135 129)' : 'lightblue',\n          color: props.mode === 'dark' ? 'white' : 'black'\n        },\n        onChange: Changeonchange,\n        id: \"exampleFormControlTextarea1\",\n        rows: \"8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: Clickonclick,\n        className: \"btn btn-info mx-2\",\n        children: \"Convert to Upper Case\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: Clickonclick2,\n        className: \"btn btn-info mx-2\",\n        children: \"Convert to Lower Case\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: gmail,\n        className: \"btn btn-info mx-2\",\n        children: \"Create Gmail I'd\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: ClearText,\n        className: \"btn btn-info mx-2\",\n        children: \"Clear Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" TEXT SUMMARY: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this), text.split(\" \").length, \" words , \", text.length, \" characters , \", text.split(\" \").length * 0.008, \" sec Reading Time \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 113\n      }, this), \"Preview: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 14\n      }, this), \" \", text.length > 0 ? text : \"Start Typing In the Above Box to Preview \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n_s(Textarea, \"Kt/yo4ZcRlSRxcmAcKAou8CnBS0=\");\n_c = Textarea;\nvar _c;\n$RefreshReg$(_c, \"Textarea\");","map":{"version":3,"names":["React","useState","Textarea","props","text","setText","Clickonclick","newText","toUpperCase","showalert","Clickonclick2","toLowerCase","ClearText","gmail","Changeonchange","event","target","value","color","mode","backgroundColor","split","length"],"sources":["D:/react/src/components/Textarea.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function Textarea(props) {\r\n    //states\r\n    const [text,setText]=useState('');\r\n    \r\n/*button*/ \r\n   const Clickonclick= () =>{\r\n    let newText = text.toUpperCase();\r\n    setText(newText)\r\n    props.showalert(\"TEXT CONVERTED TO UPPERCASE\",\"SUCCESS!\");\r\n   } \r\n\r\n   const Clickonclick2= () =>{\r\n    let newText = text.toLowerCase();\r\n    setText(newText)\r\n    props.showalert(\"TEXT CONVERTED TO LOWERCASE\",\"SUCCESS!\");\r\n   } \r\n\r\n\r\n   const ClearText= () =>{\r\n    let newText = \"\";\r\n    setText(newText)\r\n    props.showalert(\"TEXT CLEARED\",\"SUCCESS!\");\r\n   } \r\n   \r\n\r\n\r\n   const gmail= () =>{\r\n    let newText = text+\"@gmail.com\";\r\n    setText(newText)\r\n    props.showalert(\"CREATED!\",\"YOUR GMAIL HAS BEEN CREATED!\")\r\n   } \r\n\r\n\r\n   \r\n    /*textarea*/\r\n    const Changeonchange = (event) =>{\r\n        setText(event.target.value)\r\n    }\r\n\r\n\r\n    \r\n\r\n/*\r\n//buttons-dark/light mode \r\nconst[btntext,setbtntext]=useState(\"Enable Dark Mode\")\r\n\r\n\r\n    //dark mode- style\r\n   const [myStyle,setstyle]=useState({\r\n        color: 'black',\r\n        backgroundColor: 'white'\r\n    })\r\n\r\n\r\n    const Dark = () =>{\r\n        if(myStyle.color == 'white'){\r\n            setstyle({\r\n                color: 'black',\r\n                backgroundColor: 'white'\r\n            })\r\n            setbtntext(\"Enable Dark Mode\")\r\n        }\r\n        else{\r\n            setstyle({\r\n                color: 'white',\r\n                backgroundColor: 'black'\r\n            })\r\n            setbtntext(\"Enable Light Mode\")\r\n        }\r\n    }*/\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n  <div className=\"form-group\" style={{color: props.mode==='dark'?'white':'black'}} >\r\n    <label htmlFor=\"exampleFormControlTextarea1\">Start Typing...</label>\r\n    <textarea className=\"form-control\" value={text} style={{backgroundColor: props.mode==='dark'?'rgb(126 135 129)':'lightblue' , color:props.mode==='dark'?'white':'black'}} onChange={Changeonchange} id=\"exampleFormControlTextarea1\" rows=\"8\" ></textarea>\r\n    \r\n    <br/>\r\n\r\n    <button type=\"button\" onClick={Clickonclick} className=\"btn btn-info mx-2\">Convert to Upper Case</button>\r\n    <button type=\"button\" onClick={Clickonclick2} className=\"btn btn-info mx-2\">Convert to Lower Case</button>\r\n    <button type=\"button\" onClick={gmail} className=\"btn btn-info mx-2\">Create Gmail I'd</button>\r\n    <button type=\"button\" onClick={ClearText} className=\"btn btn-info mx-2\">Clear Text</button>\r\n    \r\n <br/><br/>\r\n\r\n    <h1> TEXT SUMMARY: </h1>\r\n    {text.split(\" \").length} words , {text.length} characters , {text.split(\" \").length*0.008} sec Reading Time <br/>\r\n    Preview: <br/> {text.length>0?text:\"Start Typing In the Above Box to Preview \"}\r\n</div>\r\n</>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}