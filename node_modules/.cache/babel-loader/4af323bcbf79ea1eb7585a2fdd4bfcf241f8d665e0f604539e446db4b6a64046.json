{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Textarea from './components/Textarea';\nimport Alert from './components/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App(props) {\n  _s();\n  const [alert, setAlert] = useState(null);\n  const showalert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const [mode, setMode] = useState('light');\n  const toggle = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.background = '#0E2046';\n      showalert(\"DARK MODE ENABLED\", \"SUCCESS!\");\n    } else {\n      setMode('light');\n      document.body.style.background = 'white';\n      showalert(\"LIGHT MODE ENABLED\", \"SUCCESS!\");\n    }\n  };\n  return (\n    /*#__PURE__*/\n    //text ko change karenge without loading the page\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"CONVERTER\",\n        mode: mode,\n        toggle: toggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"CONVERTER\",\n        mode: mode,\n        toggle: props.toggle1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(Textarea, {\n          mode: mode,\n          showalert: showalert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 33\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true)\n  );\n}\n_s(App, \"EIEkTdeZHDVgEcS49EriU7wHslw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Navbar","Textarea","Alert","App","props","alert","setAlert","showalert","message","type","msg","setTimeout","mode","setMode","toggle","document","body","style","background","toggle1"],"sources":["D:/react/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Textarea from './components/Textarea';\nimport Alert from './components/Alert';\n\n\nfunction App(props) {\nconst [alert,setAlert]=useState(null);\n\n  const showalert = (message,type) => {\n    setAlert({\n      msg:message,\n    type:type\n    })\n    setTimeout(()=>{\nsetAlert(null);\n    },1500);\n    \n  }\n\n\n\nconst [mode,setMode]=useState('light');  \n  const toggle=()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.background='#0E2046';\n      showalert(\"DARK MODE ENABLED\",\"SUCCESS!\");\n    }\n    else{\n      setMode('light');\n      document.body.style.background='white';\n      showalert(\"LIGHT MODE ENABLED\",\"SUCCESS!\");\n    }\n  }\n\n\n\n\n  return (\n    //text ko change karenge without loading the page\n    <>\n\n    <Navbar title=\"CONVERTER\" mode={mode} toggle={toggle} />\n    <Navbar title=\"CONVERTER\" mode={mode} toggle={props.toggle1} />\n    <Alert alert={alert} /> \n\n    <div className='container'> <Textarea mode={mode} showalert={showalert}/> </div>\n    \n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AAAC;AAAA;AAGvC,SAASC,GAAG,CAACC,KAAK,EAAE;EAAA;EACpB,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACP,QAAQ,CAAC,IAAI,CAAC;EAEnC,MAAMQ,SAAS,GAAG,CAACC,OAAO,EAACC,IAAI,KAAK;IAClCH,QAAQ,CAAC;MACPI,GAAG,EAACF,OAAO;MACbC,IAAI,EAACA;IACL,CAAC,CAAC;IACFE,UAAU,CAAC,MAAI;MACnBL,QAAQ,CAAC,IAAI,CAAC;IACV,CAAC,EAAC,IAAI,CAAC;EAET,CAAC;EAIH,MAAM,CAACM,IAAI,EAACC,OAAO,CAAC,GAACd,QAAQ,CAAC,OAAO,CAAC;EACpC,MAAMe,MAAM,GAAC,MAAI;IACf,IAAGF,IAAI,KAAK,OAAO,EAAC;MAClBC,OAAO,CAAC,MAAM,CAAC;MACfE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,UAAU,GAAC,SAAS;MACxCX,SAAS,CAAC,mBAAmB,EAAC,UAAU,CAAC;IAC3C,CAAC,MACG;MACFM,OAAO,CAAC,OAAO,CAAC;MAChBE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,UAAU,GAAC,OAAO;MACtCX,SAAS,CAAC,oBAAoB,EAAC,UAAU,CAAC;IAC5C;EACF,CAAC;EAKD;IAAA;IACE;IACA;MAAA,wBAEA,QAAC,MAAM;QAAC,KAAK,EAAC,WAAW;QAAC,IAAI,EAAEK,IAAK;QAAC,MAAM,EAAEE;MAAO;QAAA;QAAA;QAAA;MAAA,QAAG,eACxD,QAAC,MAAM;QAAC,KAAK,EAAC,WAAW;QAAC,IAAI,EAAEF,IAAK;QAAC,MAAM,EAAER,KAAK,CAACe;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG,eAC/D,QAAC,KAAK;QAAC,KAAK,EAAEd;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eAEvB;QAAK,SAAS,EAAC,WAAW;QAAA,6BAAE,QAAC,QAAQ;UAAC,IAAI,EAAEO,IAAK;UAAC,SAAS,EAAEL;QAAU;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;EAE7E;AAEP;AAAC,GA7CQJ,GAAG;AAAA,KAAHA,GAAG;AA+CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}