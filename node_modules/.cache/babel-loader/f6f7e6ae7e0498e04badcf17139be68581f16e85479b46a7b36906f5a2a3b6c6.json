{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\src\\\\components\\\\Textarea.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Textarea(props) {\n  _s();\n  /*button*/\n  const Clickonclick = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n  const Clickonclick2 = () => {\n    let newText = text.toLowerCase();\n    setText(newText);\n  };\n  const ClearText = () => {\n    let newText = \"\";\n    setText(newText);\n  };\n  const gmail = () => {\n    let newText = text + \"@gmail.com\";\n    setText(newText);\n  };\n  /*textarea*/\n  const Changeonchange = event => {\n    setText(event.target.value);\n  };\n\n  //states\n  const [text, setText] = useState('');\n\n  /*\r\n  //buttons-dark/light mode \r\n  const[btntext,setbtntext]=useState(\"Enable Dark Mode\")\r\n  \r\n  \r\n      //dark mode- style\r\n     const [myStyle,setstyle]=useState({\r\n          color: 'black',\r\n          backgroundColor: 'white'\r\n      })\r\n  \r\n  \r\n      const Dark = () =>{\r\n          if(myStyle.color == 'white'){\r\n              setstyle({\r\n                  color: 'black',\r\n                  backgroundColor: 'white'\r\n              })\r\n              setbtntext(\"Enable Dark Mode\")\r\n          }\r\n          else{\r\n              setstyle({\r\n                  color: 'white',\r\n                  backgroundColor: 'black'\r\n              })\r\n              setbtntext(\"Enable Light Mode\")\r\n          }\r\n      }*/\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"form-group\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : 'black'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"exampleFormControlTextarea1\",\n        children: \"Lower-Upper/ Upper-Lower\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        class: \"form-control\",\n        value: text,\n        style: {\n          backgroundColor: props.mode === 'dark' ? 'black' : 'white',\n          color: props.mode === 'dark' ? 'white' : 'black'\n        },\n        onChange: Changeonchange,\n        id: \"exampleFormControlTextarea1\",\n        rows: \"8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundcolor\n        },\n        type: \"button\",\n        onClick: Clickonclick,\n        classname: \"btn btn-info mx-2\",\n        children: \"Convert to Upper Case\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: Clickonclick2,\n        classname: \"btn btn-info mx-2\",\n        children: \"Convert to Lower Case\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: gmail,\n        classname: \"btn btn-info mx-2\",\n        children: \"Create Gmail I'd\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: ClearText,\n        classname: \"btn btn-info mx-2\",\n        children: \"Clear Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" TEXT SUMMARY: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this), text.split(\" \").length, \" words , \", text.length, \" characters , \", text.split(\" \").length * 0.008, \" sec Reading Time \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 113\n      }, this), /*#__PURE__*/_jsxDEV(\"h7\", {\n        children: [\"Preview: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 18\n        }, this), \" \", text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n_s(Textarea, \"Kt/yo4ZcRlSRxcmAcKAou8CnBS0=\");\n_c = Textarea;\nvar _c;\n$RefreshReg$(_c, \"Textarea\");","map":{"version":3,"names":["React","useState","Textarea","props","Clickonclick","newText","text","toUpperCase","setText","Clickonclick2","toLowerCase","ClearText","gmail","Changeonchange","event","target","value","color","mode","backgroundColor","backgroundcolor","split","length"],"sources":["D:/react/src/components/Textarea.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function Textarea(props) {\r\n/*button*/ \r\n   const Clickonclick= () =>{\r\n    let newText = text.toUpperCase();\r\n    setText(newText)\r\n   } \r\n\r\n   const Clickonclick2= () =>{\r\n    let newText = text.toLowerCase();\r\n    setText(newText)\r\n   } \r\n\r\n\r\n   const ClearText= () =>{\r\n    let newText = \"\";\r\n    setText(newText)\r\n   } \r\n   \r\n\r\n\r\n   const gmail= () =>{\r\n    let newText = text+\"@gmail.com\";\r\n    setText(newText)\r\n   } \r\n    /*textarea*/\r\n    const Changeonchange = (event) =>{\r\n        setText(event.target.value)\r\n    }\r\n\r\n\r\n    //states\r\n    const [text,setText]=useState('');\r\n\r\n/*\r\n//buttons-dark/light mode \r\nconst[btntext,setbtntext]=useState(\"Enable Dark Mode\")\r\n\r\n\r\n    //dark mode- style\r\n   const [myStyle,setstyle]=useState({\r\n        color: 'black',\r\n        backgroundColor: 'white'\r\n    })\r\n\r\n\r\n    const Dark = () =>{\r\n        if(myStyle.color == 'white'){\r\n            setstyle({\r\n                color: 'black',\r\n                backgroundColor: 'white'\r\n            })\r\n            setbtntext(\"Enable Dark Mode\")\r\n        }\r\n        else{\r\n            setstyle({\r\n                color: 'white',\r\n                backgroundColor: 'black'\r\n            })\r\n            setbtntext(\"Enable Light Mode\")\r\n        }\r\n    }*/\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n  <div class=\"form-group\" style={{color: props.mode==='dark'?'white':'black'}} >\r\n    <label for=\"exampleFormControlTextarea1\">Lower-Upper/ Upper-Lower</label>\r\n    <textarea class=\"form-control\" value={text} style={{backgroundColor: props.mode==='dark'?'black':'white' , color:props.mode==='dark'?'white':'black'}} onChange={Changeonchange} id=\"exampleFormControlTextarea1\" rows=\"8\" ></textarea>\r\n    \r\n    <br/><br/>\r\n\r\n    <button style={{backgroundcolor}} type=\"button\" onClick={Clickonclick} classname=\"btn btn-info mx-2\">Convert to Upper Case</button>\r\n    <button type=\"button\" onClick={Clickonclick2} classname=\"btn btn-info mx-2\">Convert to Lower Case</button>\r\n    <button type=\"button\" onClick={gmail} classname=\"btn btn-info mx-2\">Create Gmail I'd</button>\r\n    <button type=\"button\" onClick={ClearText} classname=\"btn btn-info mx-2\">Clear Text</button>\r\n    \r\n <br/><br/>\r\n\r\n    <h1> TEXT SUMMARY: </h1>\r\n    {text.split(\" \").length} words , {text.length} characters , {text.split(\" \").length*0.008} sec Reading Time <br/>\r\n    <h7>Preview: <br/> {text}</h7>\r\n</div>\r\n</>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}